$min-margin-threshold: 1rem;

@mixin generate-margins {
	@each $key, $value in $margin-values {
		.mt-#{$key} {
			margin-top: $value;
		}
		.mb-#{$key} {
			margin-bottom: $value;
		}
		.ml-#{$key} {
			margin-left: $value;
		}
		.mr-#{$key} {
			margin-right: $value;
		}
	}
}

@include generate-margins;

@each $breakpoint-name, $breakpoint-value in $breakpoints {
	@media (max-width: $breakpoint-value) {
		@each $margin-key, $margin-value in $margin-values {
			@if map-has-key($breakpoint-multipliers, $breakpoint-name) and
				type-of($margin-value) ==
				'number' and
				$margin-value !=
				0
			{
				$multiplier: map-get($breakpoint-multipliers, $breakpoint-name);
				$adjusted-margin: $margin-value * $multiplier;
				@if $adjusted-margin > $min-margin-threshold {
					.mt-#{$margin-key} {
						margin-top: $adjusted-margin;
					}
					.mb-#{$margin-key} {
						margin-bottom: $adjusted-margin;
					}
					.ml-#{$margin-key} {
						margin-left: $adjusted-margin;
					}
					.mr-#{$margin-key} {
						margin-right: $adjusted-margin;
					}
				}
			}

			@if map-has-key($specific-margin-breakpoints, $margin-key) {
				$specific-breakpoints: map-get(
					$specific-margin-breakpoints,
					$margin-key
				);
				@if index($specific-breakpoints, $breakpoint-name) or
					index($specific-breakpoints, 'initial')
				{
					.mt-#{$breakpoint-name}-#{$margin-key} {
						margin-top: $margin-value !important;
					}
					.mb-#{$breakpoint-name}-#{$margin-key} {
						margin-bottom: $margin-value !important;
					}
					.ml-#{$breakpoint-name}-#{$margin-key} {
						margin-left: $margin-value !important;
					}
					.mr-#{$breakpoint-name}-#{$margin-key} {
						margin-right: $margin-value !important;
					}
				}
			}
		}
	}
}
